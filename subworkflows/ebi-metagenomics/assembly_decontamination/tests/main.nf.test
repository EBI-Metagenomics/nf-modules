nextflow_workflow {
    
    name "Test subworkflow ASSEMBLY_DECONTAMINATION"
    script "../main.nf"
    config "./nextflow.config"
    workflow "ASSEMBLY_DECONTAMINATION"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/assembly_decontamination"
    tag "blast/blastn"
    tag "seqkit/grep"

    test("Assembly host decontamination") {
        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id: 'test' ], // meta map
                    file("${moduleDir}/tests/data/test.fa", checkIfExists: true)
                ])
                input[1] = Channel.of([
                    [id: 'reference_genome' ], // meta map
                    file("${moduleDir}/tests/data/contamination.fa*", checkIfExists: true).collect()
                ])
                """
            }

        }
        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out.cleaned_contigs).match() },
                {
                  def cleaned_contigs = path(workflow.out.cleaned_contigs.get(0).get(1)).fasta
                  assert "uncontaminated_contig" in cleaned_contigs
                  assert "partially_contaminated_contig" in cleaned_contigs
                  assert !("contaminated_contig" in cleaned_contigs)
                }
            )
        }
    }
}
